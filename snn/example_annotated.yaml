network:
  name: example
  groups:
    - name: snd
      attributes: [log_spikes: true, threshold: 1.0]
      neurons:
        a: [log_potential: true, bias: 1.0] # DOT: a [log_potential=true bias=1.0]
        b: [bias: 1.0]
        c: [bias: 1.0]
    - name: rcv
      attributes: [log_spikes: true, soma: {threshold: 2.0}]
      neurons:
        n[0..2]: [bias: 1.0]
      # Alternative format for neuron
      # - name: n[0..2]
      #   attributes:
      #     bias: 1.0
  edges:
  # TODO: does it matter which order these connections are created in the src
  #  neuron - technically it does. Unless we are able to sort the connections
  #  later? Different builds might assign the edges in different orders
  # TODO: store position of each entry inside the created edges and neurons
  #  position for the mapping order.
    snd.a -> rcv.n[0]: [weight: -1.0]
    # DOT format looks like: snd.A -> rcv.n0 [weight=-1.0 tag=0]
    snd.b -> rcv.n[2]: [weight: -2.0]
    snd.c -> rcv.n[2]: [weight: 3.0]
    # edges also supports alternative syntax
    # - {source: snd.A, target: rcv.n0, attributes: {weight: -2.0}}
    # - {source: snd.B, target: rcv.n2, attributes: {weight: 3.0}}
    # send -> receive [pattern: conv2d, kernels: {}]

mappings:
  - snd.a: {core: 0.0}
  - snd.b: {core: 0.0}
  - snd.c: {core: 0.1}
  - rcv.n[0]: {core: 0.0, soma: demo_soma_alt}
  - rcv.n[1]: {core: 0.0, soma: demo_soma_alt}
  - rcv.n[2]: {core: 0.1, soma: demo_soma_alt}

### Wishlist and TODO
## TODO
## Wishlist
# - support mapping multiple edges in a group e.g.,
# - {src: {group: 0}, dst: {group: 1}, pattern: conv2d, kernels: {}}